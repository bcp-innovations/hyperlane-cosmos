syntax = "proto3";
package hyperlane.warp.v1;

option go_package = "github.com/bcp-innovations/hyperlane-cosmos/x/warp/types";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

// Params defines the parameters of the module.
message Params { option (amino.name) = "hyperlane/warp/Params"; }

// GenesisState is the state that must be provided at genesis.
message GenesisState {
  // params defines all the parameters of the module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];

  repeated HypToken tokens = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// HypToken ...
message HypToken {
  bytes id = 1;
  string owner = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  HypTokenType token_type = 3;

  bytes origin_mailbox = 4;
  string origin_denom = 5;

  string collateral_balance = 6 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];

  string ism_id = 7;

  // ERC20 metadata used only for synthetic tokens.
  TokenMetadata metadata = 8;
}

// RemoteRouter ...
message RemoteRouter {
  uint32 receiver_domain = 1;
  string receiver_contract = 2;
  string gas = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// HypTokenType ...
enum HypTokenType {
  option (gogoproto.goproto_enum_prefix) = false;

  // HYP_TOKEN_TYPE_UNSPECIFIED ...
  HYP_TOKEN_TYPE_UNSPECIFIED = 0;

  // HYP_TOKEN_TYPE_COLLATERAL ...
  HYP_TOKEN_TYPE_COLLATERAL = 1;

  // HYP_TOKEN_TYPE_SYNTHETIC ...
  HYP_TOKEN_TYPE_SYNTHETIC = 2;
}

// TokenMetadata
message TokenMetadata {
  string name = 1;
  string symbol = 2;
  string total_supply = 3 [
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
  uint32 decimals = 4;
}