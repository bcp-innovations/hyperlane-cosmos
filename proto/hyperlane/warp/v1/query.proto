syntax = "proto3";
package hyperlane.warp.v1;

option go_package = "github.com/bcp-innovations/hyperlane-cosmos/x/warp/types";

import "hyperlane/warp/v1/types.proto";
import "google/api/annotations.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module Msg service.
service Query {
  // Params returns the module parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/hyperlane/warp/v1/params";
  }

  // Tokens ...
  rpc Tokens(QueryTokensRequest) returns (QueryTokensResponse) {
    option (google.api.http).get = "/hyperlane/v1/tokens";
  }

  // Token ...
  rpc Token(QueryTokenRequest) returns (QueryTokenResponse) {
    option (google.api.http).get = "/hyperlane/v1/tokens/{id}";
  }

  // RemoteRouters ...
  rpc RemoteRouters(QueryRemoteRoutersRequest)
      returns (QueryRemoteRoutersResponse) {
    option (google.api.http).get = "/hyperlane/v1/tokens/{id}/remote_routers";
  }
}

// QueryTokensRequest ...
message QueryTokensRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryTokensResponse {
  // params defines the parameters of the module.
  repeated QueryTokenResponse tokens = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// QueryTokenRequest ...
message QueryTokenRequest { string id = 1; }

// QueryTokenResponse ...
message QueryTokenResponse {
  uint64 id = 1;
  string owner = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  HypTokenType token_type = 3;

  string origin_mailbox = 4;
  string origin_denom = 5;

  string ism_id = 7;

  repeated RemoteRouter remote_routers = 6;
}

// QueryRemoteRoutersRequest ...
message QueryRemoteRoutersRequest { string id = 1; }

// QueryRemoteRoutersResponse ...
message QueryRemoteRoutersResponse { repeated RemoteRouter remote_routers = 6; }

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}
