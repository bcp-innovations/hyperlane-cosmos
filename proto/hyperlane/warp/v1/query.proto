syntax = "proto3";
package hyperlane.warp.v1;

option go_package = "github.com/bcp-innovations/hyperlane-cosmos/x/warp/types";

import "cosmos/base/query/v1beta1/pagination.proto";
import "hyperlane/warp/v1/types.proto";
import "google/api/annotations.proto";
import "cosmos/query/v1/query.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module Msg service.
service Query {
// Params returns the module parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/hyperlane/v1/params";
  }

  rpc Tokens(QueryTokensRequest) returns (QueryTokensResponse) {
    option (google.api.http).get = "/hyperlane/v1/tokens";
  }

  rpc Token(QueryMailboxRequest) returns (QueryTokenResponse) {
    option (google.api.http).get = "/hyperlane/v1/tokens/{id}";
  }
}

message QueryTokensRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryTokensResponse {
  // params defines the parameters of the module.
  repeated QueryTokenResponse tokens = 1
  [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

message QueryMailboxRequest {
  string id = 1;
}

message QueryTokenResponse {
  string id = 1;
  string creator = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  HypTokenType token_type = 3;

  string origin_mailbox = 4;
  string origin_denom = 5;

  uint32 receiver_domain = 6;
  string receiver_contract = 7;
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params defines the parameters of the module.
  Params params = 1
  [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}
