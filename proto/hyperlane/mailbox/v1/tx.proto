syntax = "proto3";
package hyperlane.mailbox.v1;

option go_package = "github.com/KYVENetwork/hyperlane-cosmos/x/mailbox/types";

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";
import "hyperlane/mailbox/v1/types.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc CreateMailbox(MsgCreateMailbox) returns (MsgCreateMailboxResponse);

  rpc DispatchMessage(MsgDispatchMessage) returns (MsgDispatchMessageResponse);

  rpc ProcessMessage(MsgProcessMessage) returns (MsgProcessMessageResponse);

  // UpdateParams updates the module parameters.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgCreateMailbox {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/mailbox/MsgCreateMailbox";

  // sender is the message sender.
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string ism = 2;
}

message MsgCreateMailboxResponse {}

message MsgDispatchMessage {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "hyperlane/mailbox/MsgDispatchMessage";

  // TODO: Check types
  string mailbox_id = 1;
  string sender = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  uint32 destination = 3;
  // TODO: Determine how this should look like to make it EVM-compatible.
  // Hex encoded
  // TODO: Use bytes
  string recipient = 4;
  string body = 5;
}

message MsgDispatchMessageResponse {
  string message_id = 1;
}

message MsgProcessMessage {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "hyperlane/mailbox/MsgProcessMessage";

  string mailbox_id = 1;
  string metadata = 2;
  string message = 3;
  string sender = 4 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message MsgProcessMessageResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "hyperlane/mailbox/MsgUpdateParams";

  // authority is the address that controls the module
  // NOTE: Defaults to the governance module unless overwritten.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // params defines the module parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}
