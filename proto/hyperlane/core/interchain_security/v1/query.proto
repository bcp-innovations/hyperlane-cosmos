syntax = "proto3";
package hyperlane.core.interchain_security.v1;

option go_package = "github.com/bcp-innovations/hyperlane-cosmos/x/core/_interchain_security/types";

import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module Msg service.
service Query {

  // Isms ...
  rpc Isms(QueryIsmsRequest) returns (QueryIsmsResponse) {
    option (google.api.http).get = "/hyperlane/v1/isms";
  }

  // Ism ...
  rpc Ism(QueryIsmRequest) returns (QueryIsmResponse) {
    option (google.api.http).get = "/hyperlane/v1/isms/{id}";
  }
}

// QueryIsmsRequest ...
message QueryIsmsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryIsmsResponse ...
message QueryIsmsResponse {
  repeated google.protobuf.Any isms = 1
      [ (cosmos_proto.accepts_interface) =
            "hyperlane.core.v1._interchain_security_module."
            "HyperlaneInterchainSecurityModule" ];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryIsmRequest ...
message QueryIsmRequest { string id = 1; }

// QueryIsmResponse ...
message QueryIsmResponse {
  google.protobuf.Any ism = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}