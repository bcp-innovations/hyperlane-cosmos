syntax = "proto3";
package hyperlane.core.interchain_security.v1;

option go_package = "github.com/bcp-innovations/hyperlane-cosmos/x/core/_interchain_security/types";

import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateMerkleRootMultiSigIsm ...
  rpc CreateMerkleRootMultiSigIsm(MsgCreateMerkleRootMultiSigIsm)
      returns (MsgCreateMerkleRootMultiSigIsmResponse);

  // CreateNoopIsm ...
  rpc CreateNoopIsm(MsgCreateNoopIsm) returns (MsgCreateNoopIsmResponse);

  // AnnounceValidator ...
  rpc AnnounceValidator(MsgAnnounceValidator)
      returns (MsgAnnounceValidatorResponse);
}

// MsgCreateMultisigIsm ...
message MsgCreateMerkleRootMultiSigIsm {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/MsgCreateMultiSigIsm";

  // creator is the message sender.
  string creator = 1;

  // validators
  // these are 20 byte long ethereum style addresses
  repeated string validators = 2;

  // threshold ...
  uint32 threshold = 3;
}

// MsgCreateMultisigIsmResponse ...
message MsgCreateMerkleRootMultiSigIsmResponse { string id = 1; }

// MsgCreateNoopIsm ...
message MsgCreateNoopIsm {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/MsgCreateNoopIsm";

  // creator is the message sender.
  string creator = 1;
}

// MsgCreateNoopIsmResponse ...
message MsgCreateNoopIsmResponse { string id = 1; }

// MsgAnnounceValidator ...
message MsgAnnounceValidator {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/MsgAnnounceValidator";

  // validator ...
  string validator = 1;

  // storage_location ...
  string storage_location = 2;

  // signature ...
  string signature = 3;

  // mailbox_id ...
  string mailbox_id = 4;

  // creator ...
  string creator = 5;
}

// MsgAnnounceValidatorResponse ...
message MsgAnnounceValidatorResponse {}