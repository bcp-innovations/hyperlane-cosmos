syntax = "proto3";
package hyperlane.core.interchain_security.v1;

option go_package = "github.com/bcp-innovations/hyperlane-cosmos/x/core/01_interchain_security/types";

import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "hyperlane/core/interchain_security/v1/types.proto";
import "gogoproto/gogo.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // CreateMessageIdMultisigIsm ...
  rpc CreateMessageIdMultisigIsm(MsgCreateMessageIdMultisigIsm)
      returns (MsgCreateMessageIdMultisigIsmResponse);

  // CreateMerkleRootMultisigIsm ...
  rpc CreateMerkleRootMultisigIsm(MsgCreateMerkleRootMultisigIsm)
      returns (MsgCreateMerkleRootMultisigIsmResponse);

  // CreateNoopIsm ...
  rpc CreateNoopIsm(MsgCreateNoopIsm) returns (MsgCreateNoopIsmResponse);

  // CreateRoutingIsm ...
  rpc CreateRoutingIsm(MsgCreateRoutingIsm)
      returns (MsgCreateRoutingIsmResponse);

  // SetRoutingIsmDomain ...
  rpc SetRoutingIsmDomain(MsgSetRoutingIsmDomain)
      returns (MsgSetRoutingIsmDomainResponse);

  // RemoveRoutingIsmDomain ...
  rpc RemoveRoutingIsmDomain(MsgRemoveRoutingIsmDomain)
      returns (MsgRemoveRoutingIsmDomainResponse);

  // UpdateRoutingIsmOwner ...
  rpc UpdateRoutingIsmOwner(MsgUpdateRoutingIsmOwner)
      returns (MsgUpdateRoutingIsmOwnerResponse);

  // AnnounceValidator ...
  rpc AnnounceValidator(MsgAnnounceValidator)
      returns (MsgAnnounceValidatorResponse);
}

// MsgCreateMessageIdMultisigIsm ...
message MsgCreateMessageIdMultisigIsm {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/v1/MsgCreateMessageIdMultisigIsm";

  // creator is the message sender.
  string creator = 1;

  // validators
  // these are 20 byte long ethereum style addresses
  repeated string validators = 2;

  // threshold ...
  uint32 threshold = 3;
}

// MsgCreateMessageIdMultisigIsmResponse ...
message MsgCreateMessageIdMultisigIsmResponse {
  string id = 1 [
    (gogoproto.customtype) =
        "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];
}

// MsgCreateMultisigIsm ...
message MsgCreateMerkleRootMultisigIsm {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/v1/MsgCreateMerkleRootMultisigIsm";

  // creator is the message sender.
  string creator = 1;

  // validators
  // these are 20 byte long ethereum style addresses
  repeated string validators = 2;

  // threshold ...
  uint32 threshold = 3;
}

// MsgCreateMultisigIsmResponse ...
message MsgCreateMerkleRootMultisigIsmResponse {
  string id = 1 [
    (gogoproto.customtype) =
        "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];
}

// MsgCreateNoopIsm ...
message MsgCreateNoopIsm {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/v1/MsgCreateNoopIsm";

  // creator is the message sender.
  string creator = 1;
}

// MsgCreateNoopIsmResponse ...
message MsgCreateNoopIsmResponse {
  string id = 1 [
    (gogoproto.customtype) =
        "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];
}

// MsgAnnounceValidator ...
message MsgAnnounceValidator {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/v1/MsgAnnounceValidator";

  // validator ...
  string validator = 1;

  // storage_location ...
  string storage_location = 2;

  // signature ...
  string signature = 3;

  // mailbox_id ...
  string mailbox_id = 4 [
    (gogoproto.customtype) =
        "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];

  // creator ...
  string creator = 5;
}

// MsgAnnounceValidatorResponse ...
message MsgAnnounceValidatorResponse {}

// MsgCreateRoutingIsm ...
message MsgCreateRoutingIsm {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/v1/MsgCreateRoutingIsm";

  // creator ...
  string creator = 1;

  // routes ...
  repeated Route routes = 2 [ (gogoproto.nullable) = false ];
}

// MsgCreateRoutingIsmResponse ...
message MsgCreateRoutingIsmResponse {
  string id = 1 [
    (gogoproto.customtype) =
        "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];
}

// MsgSetRoutingIsmDomain ...
message MsgSetRoutingIsmDomain {
  option (cosmos.msg.v1.signer) = "owner";
  option (amino.name) =
      "hyperlane/v1/MsgCreateRoMsgSetRoutingIsmDomainutingIsm";

  // ism_id ...
  string ism_id = 1 [
    (gogoproto.customtype) =
        "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];

  // route ...
  Route route = 2 [ (gogoproto.nullable) = false ];

  // owner ...
  string owner = 3;
}

// MsgSetRoutingIsmDomainResponse ...
message MsgSetRoutingIsmDomainResponse {}

// MsgRemoveRoutingIsmDomain ...
message MsgRemoveRoutingIsmDomain {
  option (cosmos.msg.v1.signer) = "owner";
  option (amino.name) = "hyperlane/v1/MsgRemoveRoutingIsmDomain";

  // ism_id ...
  string ism_id = 1 [
    (gogoproto.customtype) =
        "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];

  // domain ...
  uint32 domain = 2;

  // owner ...
  string owner = 3;
}

// MsgRemoveRoutingIsmDomainResponse ...
message MsgRemoveRoutingIsmDomainResponse {}

// MsgUpdateRoutingIsmOwner ...
message MsgUpdateRoutingIsmOwner {
  option (cosmos.msg.v1.signer) = "owner";
  option (amino.name) = "hyperlane/v1/MsgUpdateRoutingIsmOwner";

  // ism_id ...
  string ism_id = 1 [
    (gogoproto.customtype) =
        "github.com/bcp-innovations/hyperlane-cosmos/util.HexAddress",
    (gogoproto.nullable) = false
  ];

  // owner ...
  string owner = 2;

  // new owner
  string new_owner = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // renounce_ownership
  bool renounce_ownership = 4;
}

// MsgUpdateRoutingIsmOwnerResponse ...
message MsgUpdateRoutingIsmOwnerResponse {}