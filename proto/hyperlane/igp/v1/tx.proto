syntax = "proto3";
package hyperlane.igp.v1;

option go_package = "github.com/bcp-innovations/hyperlane-cosmos/x/igp/types";

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "hyperlane/igp/v1/types.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc CreateIGP(MsgCreateIgp) returns (MsgCreateIgpResponse);

  rpc SetDestinationGasConfig(MsgSetDestinationGasConfig) returns (MsgSetDestinationGasConfigResponse);

  rpc SetBeneficiary(MsgSetBeneficiary) returns (MsgSetBeneficiaryResponse);

  rpc PayForGas(MsgPayForGas) returns (MsgPayForGasResponse);

  // UpdateParams updates the module parameters.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgCreateIgp {
  option (cosmos.msg.v1.signer) = "owner";
  option (amino.name) = "hyperlane/igp/MsgCreateIGP";

  string owner = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string beneficiary = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message MsgCreateIgpResponse {}

message MsgSetDestinationGasConfig {
  option (cosmos.msg.v1.signer) = "owner";
  option (amino.name) = "hyperlane/igp/MsgSetDestinationGasConfig";

  string owner = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string igp_id = 2;

  DestinationGasConfig destination_gas_config = 3;
}

message MsgSetDestinationGasConfigResponse {}

message MsgSetBeneficiary {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "hyperlane/igp/MsgSetBeneficiary";

  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string igp_id = 2;
  string beneficiary = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

message MsgSetBeneficiaryResponse {}

message MsgPayForGas {
  option (cosmos.msg.v1.signer) = "sender";
  option (amino.name) = "hyperlane/igp/MsgPayForGas";

  // `sender` is also used for refund overpayment.
  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string igp_id = 2;
  string message_id = 3;
  uint32 destination_domain = 4;
  uint64 gas_limit = 5;
}

message MsgPayForGasResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "hyperlane/igp/MsgUpdateParams";

  // authority is the address that controls the module
  // NOTE: Defaults to the governance module unless overwritten.
  string authority = 1;

  // params defines the module parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}
