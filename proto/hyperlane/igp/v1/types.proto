syntax = "proto3";
package hyperlane.igp.v1;

option go_package = "github.com/bcp-innovations/hyperlane-cosmos/x/igp/types";

import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "amino/amino.proto";

message Igp {
  string id = 1;
  string owner = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  string beneficiary = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  repeated DestinationGasConfig destination_gas_configs = 4;
}

message DestinationGasConfig {
  uint32 remote_domain = 1;
  GasOracle gas_oracle = 2;

  // TODO: Check if uint96 needs to be used
  uint64 gas_overhead = 3;
}

message GasOracle {
  uint64 token_exchange_rate = 1;
  uint64 gas_price = 2;
}

// Params defines the parameters of the module.
message Params { option (amino.name) = "hyperlane/igp/Params"; }

// GenesisState is the state that must be provided at genesis.
message GenesisState {
  // params defines all the parameters of the module.
  Params params = 1
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}