syntax = "proto3";
package hyperlane.ism.v1;

option go_package = "github.com/KYVENetwork/hyperlane-cosmos/x/ism/types";

import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "amino/amino.proto";
import "hyperlane/ism/v1/types.proto";
import "google/protobuf/any.proto";

// Msg defines the module Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc CreateMultisigIsm(MsgCreateMultisigIsm) returns (MsgCreateMultisigIsmResponse);

  rpc CreateNoopIsm(MsgCreateNoopIsm) returns (MsgCreateNoopIsmResponse);

  // UpdateParams updates the module parameters.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}

message MsgCreateMultisigIsm {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/ism/MsgCreateMultiSigIsm";

  // sender is the message sender.
  string creator = 1;
  MultiSigIsm multi_sig = 2;
}

message MsgCreateMultisigIsmResponse {}

message MsgCreateNoopIsm {
  option (cosmos.msg.v1.signer) = "creator";
  option (amino.name) = "hyperlane/ism/MsgCreateNoopIsm";

  // sender is the message sender.
  string creator = 1;
}

message MsgCreateNoopIsmResponse {}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";
  option (amino.name) = "hyperlane/ism/MsgUpdateParams";

  // authority is the address that controls the module
  // NOTE: Defaults to the governance module unless overwritten.
  string authority = 1;

  // params defines the module parameters to update.
  // NOTE: All parameters must be supplied.
  Params params = 2
      [ (gogoproto.nullable) = false, (amino.dont_omitempty) = true ];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}
