// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package warpv1

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var (
	md_MsgCreateCollateralToken                   protoreflect.MessageDescriptor
	fd_MsgCreateCollateralToken_creator           protoreflect.FieldDescriptor
	fd_MsgCreateCollateralToken_origin_mailbox    protoreflect.FieldDescriptor
	fd_MsgCreateCollateralToken_origin_denom      protoreflect.FieldDescriptor
	fd_MsgCreateCollateralToken_receiver_domain   protoreflect.FieldDescriptor
	fd_MsgCreateCollateralToken_receiver_mailbox  protoreflect.FieldDescriptor
	fd_MsgCreateCollateralToken_receiver_contract protoreflect.FieldDescriptor
)

func init() {
	file_hyperlane_warp_v1_tx_proto_init()
	md_MsgCreateCollateralToken = File_hyperlane_warp_v1_tx_proto.Messages().ByName("MsgCreateCollateralToken")
	fd_MsgCreateCollateralToken_creator = md_MsgCreateCollateralToken.Fields().ByName("creator")
	fd_MsgCreateCollateralToken_origin_mailbox = md_MsgCreateCollateralToken.Fields().ByName("origin_mailbox")
	fd_MsgCreateCollateralToken_origin_denom = md_MsgCreateCollateralToken.Fields().ByName("origin_denom")
	fd_MsgCreateCollateralToken_receiver_domain = md_MsgCreateCollateralToken.Fields().ByName("receiver_domain")
	fd_MsgCreateCollateralToken_receiver_mailbox = md_MsgCreateCollateralToken.Fields().ByName("receiver_mailbox")
	fd_MsgCreateCollateralToken_receiver_contract = md_MsgCreateCollateralToken.Fields().ByName("receiver_contract")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateCollateralToken)(nil)

type fastReflection_MsgCreateCollateralToken MsgCreateCollateralToken

func (x *MsgCreateCollateralToken) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateCollateralToken)(x)
}

func (x *MsgCreateCollateralToken) slowProtoReflect() protoreflect.Message {
	mi := &file_hyperlane_warp_v1_tx_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateCollateralToken_messageType fastReflection_MsgCreateCollateralToken_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateCollateralToken_messageType{}

type fastReflection_MsgCreateCollateralToken_messageType struct{}

func (x fastReflection_MsgCreateCollateralToken_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateCollateralToken)(nil)
}
func (x fastReflection_MsgCreateCollateralToken_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCollateralToken)
}
func (x fastReflection_MsgCreateCollateralToken_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCollateralToken
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateCollateralToken) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCollateralToken
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateCollateralToken) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateCollateralToken_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateCollateralToken) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCollateralToken)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateCollateralToken) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateCollateralToken)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateCollateralToken) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Creator != "" {
		value := protoreflect.ValueOfString(x.Creator)
		if !f(fd_MsgCreateCollateralToken_creator, value) {
			return
		}
	}
	if x.OriginMailbox != "" {
		value := protoreflect.ValueOfString(x.OriginMailbox)
		if !f(fd_MsgCreateCollateralToken_origin_mailbox, value) {
			return
		}
	}
	if x.OriginDenom != "" {
		value := protoreflect.ValueOfString(x.OriginDenom)
		if !f(fd_MsgCreateCollateralToken_origin_denom, value) {
			return
		}
	}
	if x.ReceiverDomain != uint32(0) {
		value := protoreflect.ValueOfUint32(x.ReceiverDomain)
		if !f(fd_MsgCreateCollateralToken_receiver_domain, value) {
			return
		}
	}
	if x.ReceiverMailbox != "" {
		value := protoreflect.ValueOfString(x.ReceiverMailbox)
		if !f(fd_MsgCreateCollateralToken_receiver_mailbox, value) {
			return
		}
	}
	if x.ReceiverContract != "" {
		value := protoreflect.ValueOfString(x.ReceiverContract)
		if !f(fd_MsgCreateCollateralToken_receiver_contract, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateCollateralToken) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgCreateCollateralToken.creator":
		return x.Creator != ""
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_mailbox":
		return x.OriginMailbox != ""
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_denom":
		return x.OriginDenom != ""
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_domain":
		return x.ReceiverDomain != uint32(0)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_mailbox":
		return x.ReceiverMailbox != ""
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_contract":
		return x.ReceiverContract != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralToken"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralToken does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollateralToken) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgCreateCollateralToken.creator":
		x.Creator = ""
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_mailbox":
		x.OriginMailbox = ""
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_denom":
		x.OriginDenom = ""
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_domain":
		x.ReceiverDomain = uint32(0)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_mailbox":
		x.ReceiverMailbox = ""
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_contract":
		x.ReceiverContract = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralToken"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralToken does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateCollateralToken) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hyperlane.warp.v1.MsgCreateCollateralToken.creator":
		value := x.Creator
		return protoreflect.ValueOfString(value)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_mailbox":
		value := x.OriginMailbox
		return protoreflect.ValueOfString(value)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_denom":
		value := x.OriginDenom
		return protoreflect.ValueOfString(value)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_domain":
		value := x.ReceiverDomain
		return protoreflect.ValueOfUint32(value)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_mailbox":
		value := x.ReceiverMailbox
		return protoreflect.ValueOfString(value)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_contract":
		value := x.ReceiverContract
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralToken"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralToken does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollateralToken) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgCreateCollateralToken.creator":
		x.Creator = value.Interface().(string)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_mailbox":
		x.OriginMailbox = value.Interface().(string)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_denom":
		x.OriginDenom = value.Interface().(string)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_domain":
		x.ReceiverDomain = uint32(value.Uint())
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_mailbox":
		x.ReceiverMailbox = value.Interface().(string)
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_contract":
		x.ReceiverContract = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralToken"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralToken does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollateralToken) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgCreateCollateralToken.creator":
		panic(fmt.Errorf("field creator of message hyperlane.warp.v1.MsgCreateCollateralToken is not mutable"))
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_mailbox":
		panic(fmt.Errorf("field origin_mailbox of message hyperlane.warp.v1.MsgCreateCollateralToken is not mutable"))
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_denom":
		panic(fmt.Errorf("field origin_denom of message hyperlane.warp.v1.MsgCreateCollateralToken is not mutable"))
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_domain":
		panic(fmt.Errorf("field receiver_domain of message hyperlane.warp.v1.MsgCreateCollateralToken is not mutable"))
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_mailbox":
		panic(fmt.Errorf("field receiver_mailbox of message hyperlane.warp.v1.MsgCreateCollateralToken is not mutable"))
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_contract":
		panic(fmt.Errorf("field receiver_contract of message hyperlane.warp.v1.MsgCreateCollateralToken is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralToken"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralToken does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateCollateralToken) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgCreateCollateralToken.creator":
		return protoreflect.ValueOfString("")
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_mailbox":
		return protoreflect.ValueOfString("")
	case "hyperlane.warp.v1.MsgCreateCollateralToken.origin_denom":
		return protoreflect.ValueOfString("")
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_domain":
		return protoreflect.ValueOfUint32(uint32(0))
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_mailbox":
		return protoreflect.ValueOfString("")
	case "hyperlane.warp.v1.MsgCreateCollateralToken.receiver_contract":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralToken"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralToken does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateCollateralToken) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hyperlane.warp.v1.MsgCreateCollateralToken", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateCollateralToken) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollateralToken) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateCollateralToken) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateCollateralToken) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateCollateralToken)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Creator)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OriginMailbox)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.OriginDenom)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.ReceiverDomain != 0 {
			n += 1 + runtime.Sov(uint64(x.ReceiverDomain))
		}
		l = len(x.ReceiverMailbox)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.ReceiverContract)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCollateralToken)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.ReceiverContract) > 0 {
			i -= len(x.ReceiverContract)
			copy(dAtA[i:], x.ReceiverContract)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReceiverContract)))
			i--
			dAtA[i] = 0x32
		}
		if len(x.ReceiverMailbox) > 0 {
			i -= len(x.ReceiverMailbox)
			copy(dAtA[i:], x.ReceiverMailbox)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ReceiverMailbox)))
			i--
			dAtA[i] = 0x2a
		}
		if x.ReceiverDomain != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ReceiverDomain))
			i--
			dAtA[i] = 0x20
		}
		if len(x.OriginDenom) > 0 {
			i -= len(x.OriginDenom)
			copy(dAtA[i:], x.OriginDenom)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OriginDenom)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.OriginMailbox) > 0 {
			i -= len(x.OriginMailbox)
			copy(dAtA[i:], x.OriginMailbox)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.OriginMailbox)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Creator) > 0 {
			i -= len(x.Creator)
			copy(dAtA[i:], x.Creator)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Creator)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCollateralToken)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCollateralToken: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCollateralToken: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Creator = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OriginMailbox", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OriginMailbox = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field OriginDenom", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.OriginDenom = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReceiverDomain", wireType)
				}
				x.ReceiverDomain = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ReceiverDomain |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 5:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReceiverMailbox", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReceiverMailbox = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 6:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ReceiverContract", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ReceiverContract = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgCreateCollateralTokenResponse protoreflect.MessageDescriptor
)

func init() {
	file_hyperlane_warp_v1_tx_proto_init()
	md_MsgCreateCollateralTokenResponse = File_hyperlane_warp_v1_tx_proto.Messages().ByName("MsgCreateCollateralTokenResponse")
}

var _ protoreflect.Message = (*fastReflection_MsgCreateCollateralTokenResponse)(nil)

type fastReflection_MsgCreateCollateralTokenResponse MsgCreateCollateralTokenResponse

func (x *MsgCreateCollateralTokenResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgCreateCollateralTokenResponse)(x)
}

func (x *MsgCreateCollateralTokenResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hyperlane_warp_v1_tx_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgCreateCollateralTokenResponse_messageType fastReflection_MsgCreateCollateralTokenResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgCreateCollateralTokenResponse_messageType{}

type fastReflection_MsgCreateCollateralTokenResponse_messageType struct{}

func (x fastReflection_MsgCreateCollateralTokenResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgCreateCollateralTokenResponse)(nil)
}
func (x fastReflection_MsgCreateCollateralTokenResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCollateralTokenResponse)
}
func (x fastReflection_MsgCreateCollateralTokenResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCollateralTokenResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgCreateCollateralTokenResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgCreateCollateralTokenResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgCreateCollateralTokenResponse) New() protoreflect.Message {
	return new(fastReflection_MsgCreateCollateralTokenResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgCreateCollateralTokenResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralTokenResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralTokenResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralTokenResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralTokenResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralTokenResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralTokenResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralTokenResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralTokenResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollateralTokenResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralTokenResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralTokenResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgCreateCollateralTokenResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgCreateCollateralTokenResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgCreateCollateralTokenResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgCreateCollateralTokenResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hyperlane.warp.v1.MsgCreateCollateralTokenResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgCreateCollateralTokenResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgCreateCollateralTokenResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgCreateCollateralTokenResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgCreateCollateralTokenResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgCreateCollateralTokenResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCollateralTokenResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgCreateCollateralTokenResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCollateralTokenResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgCreateCollateralTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRemoteTransfer           protoreflect.MessageDescriptor
	fd_MsgRemoteTransfer_sender    protoreflect.FieldDescriptor
	fd_MsgRemoteTransfer_token_id  protoreflect.FieldDescriptor
	fd_MsgRemoteTransfer_recipient protoreflect.FieldDescriptor
	fd_MsgRemoteTransfer_amount    protoreflect.FieldDescriptor
)

func init() {
	file_hyperlane_warp_v1_tx_proto_init()
	md_MsgRemoteTransfer = File_hyperlane_warp_v1_tx_proto.Messages().ByName("MsgRemoteTransfer")
	fd_MsgRemoteTransfer_sender = md_MsgRemoteTransfer.Fields().ByName("sender")
	fd_MsgRemoteTransfer_token_id = md_MsgRemoteTransfer.Fields().ByName("token_id")
	fd_MsgRemoteTransfer_recipient = md_MsgRemoteTransfer.Fields().ByName("recipient")
	fd_MsgRemoteTransfer_amount = md_MsgRemoteTransfer.Fields().ByName("amount")
}

var _ protoreflect.Message = (*fastReflection_MsgRemoteTransfer)(nil)

type fastReflection_MsgRemoteTransfer MsgRemoteTransfer

func (x *MsgRemoteTransfer) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRemoteTransfer)(x)
}

func (x *MsgRemoteTransfer) slowProtoReflect() protoreflect.Message {
	mi := &file_hyperlane_warp_v1_tx_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRemoteTransfer_messageType fastReflection_MsgRemoteTransfer_messageType
var _ protoreflect.MessageType = fastReflection_MsgRemoteTransfer_messageType{}

type fastReflection_MsgRemoteTransfer_messageType struct{}

func (x fastReflection_MsgRemoteTransfer_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRemoteTransfer)(nil)
}
func (x fastReflection_MsgRemoteTransfer_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRemoteTransfer)
}
func (x fastReflection_MsgRemoteTransfer_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRemoteTransfer
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRemoteTransfer) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRemoteTransfer
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRemoteTransfer) Type() protoreflect.MessageType {
	return _fastReflection_MsgRemoteTransfer_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRemoteTransfer) New() protoreflect.Message {
	return new(fastReflection_MsgRemoteTransfer)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRemoteTransfer) Interface() protoreflect.ProtoMessage {
	return (*MsgRemoteTransfer)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRemoteTransfer) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Sender != "" {
		value := protoreflect.ValueOfString(x.Sender)
		if !f(fd_MsgRemoteTransfer_sender, value) {
			return
		}
	}
	if x.TokenId != "" {
		value := protoreflect.ValueOfString(x.TokenId)
		if !f(fd_MsgRemoteTransfer_token_id, value) {
			return
		}
	}
	if x.Recipient != "" {
		value := protoreflect.ValueOfString(x.Recipient)
		if !f(fd_MsgRemoteTransfer_recipient, value) {
			return
		}
	}
	if x.Amount != "" {
		value := protoreflect.ValueOfString(x.Amount)
		if !f(fd_MsgRemoteTransfer_amount, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRemoteTransfer) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransfer.sender":
		return x.Sender != ""
	case "hyperlane.warp.v1.MsgRemoteTransfer.token_id":
		return x.TokenId != ""
	case "hyperlane.warp.v1.MsgRemoteTransfer.recipient":
		return x.Recipient != ""
	case "hyperlane.warp.v1.MsgRemoteTransfer.amount":
		return x.Amount != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransfer"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransfer does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemoteTransfer) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransfer.sender":
		x.Sender = ""
	case "hyperlane.warp.v1.MsgRemoteTransfer.token_id":
		x.TokenId = ""
	case "hyperlane.warp.v1.MsgRemoteTransfer.recipient":
		x.Recipient = ""
	case "hyperlane.warp.v1.MsgRemoteTransfer.amount":
		x.Amount = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransfer"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransfer does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRemoteTransfer) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransfer.sender":
		value := x.Sender
		return protoreflect.ValueOfString(value)
	case "hyperlane.warp.v1.MsgRemoteTransfer.token_id":
		value := x.TokenId
		return protoreflect.ValueOfString(value)
	case "hyperlane.warp.v1.MsgRemoteTransfer.recipient":
		value := x.Recipient
		return protoreflect.ValueOfString(value)
	case "hyperlane.warp.v1.MsgRemoteTransfer.amount":
		value := x.Amount
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransfer"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransfer does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemoteTransfer) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransfer.sender":
		x.Sender = value.Interface().(string)
	case "hyperlane.warp.v1.MsgRemoteTransfer.token_id":
		x.TokenId = value.Interface().(string)
	case "hyperlane.warp.v1.MsgRemoteTransfer.recipient":
		x.Recipient = value.Interface().(string)
	case "hyperlane.warp.v1.MsgRemoteTransfer.amount":
		x.Amount = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransfer"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransfer does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemoteTransfer) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransfer.sender":
		panic(fmt.Errorf("field sender of message hyperlane.warp.v1.MsgRemoteTransfer is not mutable"))
	case "hyperlane.warp.v1.MsgRemoteTransfer.token_id":
		panic(fmt.Errorf("field token_id of message hyperlane.warp.v1.MsgRemoteTransfer is not mutable"))
	case "hyperlane.warp.v1.MsgRemoteTransfer.recipient":
		panic(fmt.Errorf("field recipient of message hyperlane.warp.v1.MsgRemoteTransfer is not mutable"))
	case "hyperlane.warp.v1.MsgRemoteTransfer.amount":
		panic(fmt.Errorf("field amount of message hyperlane.warp.v1.MsgRemoteTransfer is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransfer"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransfer does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRemoteTransfer) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransfer.sender":
		return protoreflect.ValueOfString("")
	case "hyperlane.warp.v1.MsgRemoteTransfer.token_id":
		return protoreflect.ValueOfString("")
	case "hyperlane.warp.v1.MsgRemoteTransfer.recipient":
		return protoreflect.ValueOfString("")
	case "hyperlane.warp.v1.MsgRemoteTransfer.amount":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransfer"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransfer does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRemoteTransfer) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hyperlane.warp.v1.MsgRemoteTransfer", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRemoteTransfer) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemoteTransfer) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRemoteTransfer) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRemoteTransfer) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRemoteTransfer)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.Sender)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.TokenId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Recipient)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Amount)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRemoteTransfer)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.Amount) > 0 {
			i -= len(x.Amount)
			copy(dAtA[i:], x.Amount)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Amount)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Recipient) > 0 {
			i -= len(x.Recipient)
			copy(dAtA[i:], x.Recipient)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Recipient)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.TokenId) > 0 {
			i -= len(x.TokenId)
			copy(dAtA[i:], x.TokenId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.TokenId)))
			i--
			dAtA[i] = 0x12
		}
		if len(x.Sender) > 0 {
			i -= len(x.Sender)
			copy(dAtA[i:], x.Sender)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Sender)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRemoteTransfer)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRemoteTransfer: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRemoteTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Sender = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.TokenId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Recipient = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Amount = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_MsgRemoteTransferResponse            protoreflect.MessageDescriptor
	fd_MsgRemoteTransferResponse_message_id protoreflect.FieldDescriptor
)

func init() {
	file_hyperlane_warp_v1_tx_proto_init()
	md_MsgRemoteTransferResponse = File_hyperlane_warp_v1_tx_proto.Messages().ByName("MsgRemoteTransferResponse")
	fd_MsgRemoteTransferResponse_message_id = md_MsgRemoteTransferResponse.Fields().ByName("message_id")
}

var _ protoreflect.Message = (*fastReflection_MsgRemoteTransferResponse)(nil)

type fastReflection_MsgRemoteTransferResponse MsgRemoteTransferResponse

func (x *MsgRemoteTransferResponse) ProtoReflect() protoreflect.Message {
	return (*fastReflection_MsgRemoteTransferResponse)(x)
}

func (x *MsgRemoteTransferResponse) slowProtoReflect() protoreflect.Message {
	mi := &file_hyperlane_warp_v1_tx_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_MsgRemoteTransferResponse_messageType fastReflection_MsgRemoteTransferResponse_messageType
var _ protoreflect.MessageType = fastReflection_MsgRemoteTransferResponse_messageType{}

type fastReflection_MsgRemoteTransferResponse_messageType struct{}

func (x fastReflection_MsgRemoteTransferResponse_messageType) Zero() protoreflect.Message {
	return (*fastReflection_MsgRemoteTransferResponse)(nil)
}
func (x fastReflection_MsgRemoteTransferResponse_messageType) New() protoreflect.Message {
	return new(fastReflection_MsgRemoteTransferResponse)
}
func (x fastReflection_MsgRemoteTransferResponse_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRemoteTransferResponse
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_MsgRemoteTransferResponse) Descriptor() protoreflect.MessageDescriptor {
	return md_MsgRemoteTransferResponse
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_MsgRemoteTransferResponse) Type() protoreflect.MessageType {
	return _fastReflection_MsgRemoteTransferResponse_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_MsgRemoteTransferResponse) New() protoreflect.Message {
	return new(fastReflection_MsgRemoteTransferResponse)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_MsgRemoteTransferResponse) Interface() protoreflect.ProtoMessage {
	return (*MsgRemoteTransferResponse)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_MsgRemoteTransferResponse) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.MessageId != "" {
		value := protoreflect.ValueOfString(x.MessageId)
		if !f(fd_MsgRemoteTransferResponse_message_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_MsgRemoteTransferResponse) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransferResponse.message_id":
		return x.MessageId != ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransferResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransferResponse does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemoteTransferResponse) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransferResponse.message_id":
		x.MessageId = ""
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransferResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransferResponse does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_MsgRemoteTransferResponse) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransferResponse.message_id":
		value := x.MessageId
		return protoreflect.ValueOfString(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransferResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransferResponse does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemoteTransferResponse) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransferResponse.message_id":
		x.MessageId = value.Interface().(string)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransferResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransferResponse does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemoteTransferResponse) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransferResponse.message_id":
		panic(fmt.Errorf("field message_id of message hyperlane.warp.v1.MsgRemoteTransferResponse is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransferResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransferResponse does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_MsgRemoteTransferResponse) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "hyperlane.warp.v1.MsgRemoteTransferResponse.message_id":
		return protoreflect.ValueOfString("")
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: hyperlane.warp.v1.MsgRemoteTransferResponse"))
		}
		panic(fmt.Errorf("message hyperlane.warp.v1.MsgRemoteTransferResponse does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_MsgRemoteTransferResponse) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in hyperlane.warp.v1.MsgRemoteTransferResponse", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_MsgRemoteTransferResponse) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_MsgRemoteTransferResponse) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_MsgRemoteTransferResponse) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_MsgRemoteTransferResponse) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*MsgRemoteTransferResponse)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		l = len(x.MessageId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*MsgRemoteTransferResponse)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if len(x.MessageId) > 0 {
			i -= len(x.MessageId)
			copy(dAtA[i:], x.MessageId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.MessageId)))
			i--
			dAtA[i] = 0xa
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*MsgRemoteTransferResponse)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRemoteTransferResponse: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: MsgRemoteTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.MessageId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: hyperlane/warp/v1/tx.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgCreateCollateralToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// sender is the message sender.
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	OriginMailbox    string `protobuf:"bytes,2,opt,name=origin_mailbox,json=originMailbox,proto3" json:"origin_mailbox,omitempty"`
	OriginDenom      string `protobuf:"bytes,3,opt,name=origin_denom,json=originDenom,proto3" json:"origin_denom,omitempty"`
	ReceiverDomain   uint32 `protobuf:"varint,4,opt,name=receiver_domain,json=receiverDomain,proto3" json:"receiver_domain,omitempty"`
	ReceiverMailbox  string `protobuf:"bytes,5,opt,name=receiver_mailbox,json=receiverMailbox,proto3" json:"receiver_mailbox,omitempty"`
	ReceiverContract string `protobuf:"bytes,6,opt,name=receiver_contract,json=receiverContract,proto3" json:"receiver_contract,omitempty"`
}

func (x *MsgCreateCollateralToken) Reset() {
	*x = MsgCreateCollateralToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperlane_warp_v1_tx_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCollateralToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCollateralToken) ProtoMessage() {}

// Deprecated: Use MsgCreateCollateralToken.ProtoReflect.Descriptor instead.
func (*MsgCreateCollateralToken) Descriptor() ([]byte, []int) {
	return file_hyperlane_warp_v1_tx_proto_rawDescGZIP(), []int{0}
}

func (x *MsgCreateCollateralToken) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *MsgCreateCollateralToken) GetOriginMailbox() string {
	if x != nil {
		return x.OriginMailbox
	}
	return ""
}

func (x *MsgCreateCollateralToken) GetOriginDenom() string {
	if x != nil {
		return x.OriginDenom
	}
	return ""
}

func (x *MsgCreateCollateralToken) GetReceiverDomain() uint32 {
	if x != nil {
		return x.ReceiverDomain
	}
	return 0
}

func (x *MsgCreateCollateralToken) GetReceiverMailbox() string {
	if x != nil {
		return x.ReceiverMailbox
	}
	return ""
}

func (x *MsgCreateCollateralToken) GetReceiverContract() string {
	if x != nil {
		return x.ReceiverContract
	}
	return ""
}

type MsgCreateCollateralTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MsgCreateCollateralTokenResponse) Reset() {
	*x = MsgCreateCollateralTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperlane_warp_v1_tx_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateCollateralTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateCollateralTokenResponse) ProtoMessage() {}

// Deprecated: Use MsgCreateCollateralTokenResponse.ProtoReflect.Descriptor instead.
func (*MsgCreateCollateralTokenResponse) Descriptor() ([]byte, []int) {
	return file_hyperlane_warp_v1_tx_proto_rawDescGZIP(), []int{1}
}

type MsgRemoteTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender    string `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	TokenId   string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Recipient string `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *MsgRemoteTransfer) Reset() {
	*x = MsgRemoteTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperlane_warp_v1_tx_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoteTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoteTransfer) ProtoMessage() {}

// Deprecated: Use MsgRemoteTransfer.ProtoReflect.Descriptor instead.
func (*MsgRemoteTransfer) Descriptor() ([]byte, []int) {
	return file_hyperlane_warp_v1_tx_proto_rawDescGZIP(), []int{2}
}

func (x *MsgRemoteTransfer) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *MsgRemoteTransfer) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *MsgRemoteTransfer) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *MsgRemoteTransfer) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type MsgRemoteTransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (x *MsgRemoteTransferResponse) Reset() {
	*x = MsgRemoteTransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hyperlane_warp_v1_tx_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgRemoteTransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRemoteTransferResponse) ProtoMessage() {}

// Deprecated: Use MsgRemoteTransferResponse.ProtoReflect.Descriptor instead.
func (*MsgRemoteTransferResponse) Descriptor() ([]byte, []int) {
	return file_hyperlane_warp_v1_tx_proto_rawDescGZIP(), []int{3}
}

func (x *MsgRemoteTransferResponse) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

var File_hyperlane_warp_v1_tx_proto protoreflect.FileDescriptor

var file_hyperlane_warp_v1_tx_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x77, 0x61, 0x72, 0x70,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x68, 0x79,
	0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x77, 0x61, 0x72, 0x70, 0x2e, 0x76, 0x31, 0x1a,
	0x17, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x6d, 0x73, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6d,
	0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11,
	0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2f, 0x61, 0x6d, 0x69, 0x6e, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1d, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x77, 0x61, 0x72,
	0x70, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd3, 0x02, 0x0a, 0x18,
	0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65,
	0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d, 0x14, 0x63,
	0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x25, 0x0a, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x4d, 0x61, 0x69, 0x6c,
	0x62, 0x6f, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x65,
	0x6e, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x44, 0x65, 0x6e, 0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x29, 0x0a, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x69, 0x6c,
	0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x2b, 0x0a, 0x11, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x3a, 0x38, 0x82, 0xe7, 0xb0, 0x2a, 0x07, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x8a, 0xe7, 0xb0, 0x2a, 0x27, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x61, 0x6e, 0x65, 0x2f, 0x77, 0x61, 0x72, 0x70, 0x2f, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x22, 0x22, 0x0a, 0x20, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xfa, 0x01, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x73,
	0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xd2, 0xb4, 0x2d,
	0x14, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x69,
	0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x63,
	0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x48, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x30, 0xc8, 0xde, 0x1f, 0x00, 0xda, 0xde, 0x1f, 0x15,
	0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x73, 0x64, 0x6b, 0x2e, 0x69, 0x6f, 0x2f, 0x6d, 0x61, 0x74,
	0x68, 0x2e, 0x49, 0x6e, 0x74, 0xd2, 0xb4, 0x2d, 0x0a, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0xa8, 0xe7, 0xb0, 0x2a, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x3a, 0x30, 0x82, 0xe7, 0xb0, 0x2a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x8a, 0xe7, 0xb0,
	0x2a, 0x20, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x77, 0x61, 0x72, 0x70,
	0x2f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x22, 0x3a, 0x0a, 0x19, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x32, 0xed,
	0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x79, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x2b, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x77, 0x61, 0x72, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a, 0x33, 0x2e, 0x68,
	0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x77, 0x61, 0x72, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74,
	0x65, 0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x64, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x77, 0x61, 0x72, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x1a, 0x2c, 0x2e, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x77, 0x61, 0x72, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x05, 0x80, 0xe7, 0xb0, 0x2a, 0x01, 0x42, 0xcc,
	0x01, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x2e, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65,
	0x2e, 0x77, 0x61, 0x72, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x07, 0x54, 0x78, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x01, 0x5a, 0x44, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x4b, 0x59, 0x56, 0x45, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x68, 0x79, 0x70, 0x65,
	0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2d, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2f, 0x77, 0x61, 0x72, 0x70, 0x2f,
	0x76, 0x31, 0x3b, 0x77, 0x61, 0x72, 0x70, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x48, 0x57, 0x58, 0xaa,
	0x02, 0x11, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x57, 0x61, 0x72, 0x70,
	0x2e, 0x56, 0x31, 0xca, 0x02, 0x11, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x61, 0x6e, 0x65, 0x5c,
	0x57, 0x61, 0x72, 0x70, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1d, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x61, 0x6e, 0x65, 0x5c, 0x57, 0x61, 0x72, 0x70, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x13, 0x48, 0x79, 0x70, 0x65, 0x72, 0x6c,
	0x61, 0x6e, 0x65, 0x3a, 0x3a, 0x57, 0x61, 0x72, 0x70, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hyperlane_warp_v1_tx_proto_rawDescOnce sync.Once
	file_hyperlane_warp_v1_tx_proto_rawDescData = file_hyperlane_warp_v1_tx_proto_rawDesc
)

func file_hyperlane_warp_v1_tx_proto_rawDescGZIP() []byte {
	file_hyperlane_warp_v1_tx_proto_rawDescOnce.Do(func() {
		file_hyperlane_warp_v1_tx_proto_rawDescData = protoimpl.X.CompressGZIP(file_hyperlane_warp_v1_tx_proto_rawDescData)
	})
	return file_hyperlane_warp_v1_tx_proto_rawDescData
}

var file_hyperlane_warp_v1_tx_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_hyperlane_warp_v1_tx_proto_goTypes = []interface{}{
	(*MsgCreateCollateralToken)(nil),         // 0: hyperlane.warp.v1.MsgCreateCollateralToken
	(*MsgCreateCollateralTokenResponse)(nil), // 1: hyperlane.warp.v1.MsgCreateCollateralTokenResponse
	(*MsgRemoteTransfer)(nil),                // 2: hyperlane.warp.v1.MsgRemoteTransfer
	(*MsgRemoteTransferResponse)(nil),        // 3: hyperlane.warp.v1.MsgRemoteTransferResponse
}
var file_hyperlane_warp_v1_tx_proto_depIdxs = []int32{
	0, // 0: hyperlane.warp.v1.Msg.CreateCollateralToken:input_type -> hyperlane.warp.v1.MsgCreateCollateralToken
	2, // 1: hyperlane.warp.v1.Msg.RemoteTransfer:input_type -> hyperlane.warp.v1.MsgRemoteTransfer
	1, // 2: hyperlane.warp.v1.Msg.CreateCollateralToken:output_type -> hyperlane.warp.v1.MsgCreateCollateralTokenResponse
	3, // 3: hyperlane.warp.v1.Msg.RemoteTransfer:output_type -> hyperlane.warp.v1.MsgRemoteTransferResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_hyperlane_warp_v1_tx_proto_init() }
func file_hyperlane_warp_v1_tx_proto_init() {
	if File_hyperlane_warp_v1_tx_proto != nil {
		return
	}
	file_hyperlane_warp_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_hyperlane_warp_v1_tx_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCollateralToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperlane_warp_v1_tx_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateCollateralTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperlane_warp_v1_tx_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoteTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hyperlane_warp_v1_tx_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgRemoteTransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hyperlane_warp_v1_tx_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hyperlane_warp_v1_tx_proto_goTypes,
		DependencyIndexes: file_hyperlane_warp_v1_tx_proto_depIdxs,
		MessageInfos:      file_hyperlane_warp_v1_tx_proto_msgTypes,
	}.Build()
	File_hyperlane_warp_v1_tx_proto = out.File
	file_hyperlane_warp_v1_tx_proto_rawDesc = nil
	file_hyperlane_warp_v1_tx_proto_goTypes = nil
	file_hyperlane_warp_v1_tx_proto_depIdxs = nil
}
