// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hyperlane/core/v1/types.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Mailbox ...
type Mailbox struct {
	// id ...
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// creator ...
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	// message_sent ...
	MessageSent uint32 `protobuf:"varint,3,opt,name=message_sent,json=messageSent,proto3" json:"message_sent,omitempty"`
	// message_received ...
	MessageReceived uint32 `protobuf:"varint,4,opt,name=message_received,json=messageReceived,proto3" json:"message_received,omitempty"`
	// default_ism ...
	DefaultIsm string `protobuf:"bytes,5,opt,name=default_ism,json=defaultIsm,proto3" json:"default_ism,omitempty"`
	// default_hook
	DefaultHook string `protobuf:"bytes,8,opt,name=default_hook,json=defaultHook,proto3" json:"default_hook,omitempty"`
	// required_hook
	RequiredHook string `protobuf:"bytes,9,opt,name=required_hook,json=requiredHook,proto3" json:"required_hook,omitempty"`
}

func (m *Mailbox) Reset()         { *m = Mailbox{} }
func (m *Mailbox) String() string { return proto.CompactTextString(m) }
func (*Mailbox) ProtoMessage()    {}
func (*Mailbox) Descriptor() ([]byte, []int) {
	return fileDescriptor_d14de0fc8fa7fd67, []int{0}
}
func (m *Mailbox) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Mailbox) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Mailbox.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Mailbox) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mailbox.Merge(m, src)
}
func (m *Mailbox) XXX_Size() int {
	return m.Size()
}
func (m *Mailbox) XXX_DiscardUnknown() {
	xxx_messageInfo_Mailbox.DiscardUnknown(m)
}

var xxx_messageInfo_Mailbox proto.InternalMessageInfo

func (m *Mailbox) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Mailbox) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *Mailbox) GetMessageSent() uint32 {
	if m != nil {
		return m.MessageSent
	}
	return 0
}

func (m *Mailbox) GetMessageReceived() uint32 {
	if m != nil {
		return m.MessageReceived
	}
	return 0
}

func (m *Mailbox) GetDefaultIsm() string {
	if m != nil {
		return m.DefaultIsm
	}
	return ""
}

func (m *Mailbox) GetDefaultHook() string {
	if m != nil {
		return m.DefaultHook
	}
	return ""
}

func (m *Mailbox) GetRequiredHook() string {
	if m != nil {
		return m.RequiredHook
	}
	return ""
}

// Params defines the parameters of the module.
type Params struct {
	// domain ...
	Domain uint32 `protobuf:"varint,1,opt,name=domain,proto3" json:"domain,omitempty"`
}

func (m *Params) Reset()         { *m = Params{} }
func (m *Params) String() string { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()    {}
func (*Params) Descriptor() ([]byte, []int) {
	return fileDescriptor_d14de0fc8fa7fd67, []int{1}
}
func (m *Params) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Params) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Params.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Params) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Params.Merge(m, src)
}
func (m *Params) XXX_Size() int {
	return m.Size()
}
func (m *Params) XXX_DiscardUnknown() {
	xxx_messageInfo_Params.DiscardUnknown(m)
}

var xxx_messageInfo_Params proto.InternalMessageInfo

func (m *Params) GetDomain() uint32 {
	if m != nil {
		return m.Domain
	}
	return 0
}

func init() {
	proto.RegisterType((*Mailbox)(nil), "hyperlane.core.v1.Mailbox")
	proto.RegisterType((*Params)(nil), "hyperlane.core.v1.Params")
}

func init() { proto.RegisterFile("hyperlane/core/v1/types.proto", fileDescriptor_d14de0fc8fa7fd67) }

var fileDescriptor_d14de0fc8fa7fd67 = []byte{
	// 381 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x91, 0x31, 0x6f, 0x13, 0x31,
	0x14, 0xc7, 0x73, 0x07, 0xa4, 0xd4, 0x6d, 0x80, 0x5a, 0x08, 0x99, 0x4a, 0x3d, 0x4a, 0x59, 0x0a,
	0x52, 0xce, 0x2a, 0x2c, 0x88, 0x05, 0xd1, 0x09, 0x06, 0x24, 0x74, 0xdd, 0x58, 0x22, 0xdf, 0xf9,
	0x91, 0x58, 0x8d, 0xfd, 0x0e, 0xdb, 0x39, 0x25, 0x3b, 0x13, 0x13, 0x1f, 0x85, 0x81, 0x0f, 0xc1,
	0x18, 0x31, 0x31, 0xa2, 0x64, 0xe0, 0x6b, 0xa0, 0xb3, 0xef, 0xc2, 0x72, 0xd2, 0xfb, 0xbd, 0xdf,
	0x7b, 0x67, 0xbd, 0x3f, 0x39, 0x99, 0xad, 0x6a, 0xb0, 0x73, 0x61, 0x80, 0x57, 0x68, 0x81, 0x37,
	0x17, 0xdc, 0xaf, 0x6a, 0x70, 0x79, 0x6d, 0xd1, 0x23, 0x3d, 0xda, 0xb5, 0xf3, 0xb6, 0x9d, 0x37,
	0x17, 0xc7, 0x0f, 0x2b, 0x74, 0x1a, 0xdd, 0x24, 0x08, 0x3c, 0x16, 0xd1, 0x3e, 0x3e, 0x12, 0x5a,
	0x19, 0xe4, 0xe1, 0x1b, 0xd1, 0xd9, 0x97, 0x94, 0xec, 0xbd, 0x17, 0x6a, 0x5e, 0xe2, 0x92, 0xde,
	0x21, 0xa9, 0x92, 0x2c, 0x39, 0x4d, 0xce, 0xf7, 0x8b, 0x54, 0x49, 0xfa, 0x9c, 0xec, 0x55, 0x16,
	0x84, 0x47, 0xcb, 0xd2, 0x16, 0x5e, 0xb2, 0x5f, 0x3f, 0xc6, 0xf7, 0xbb, 0x8d, 0x6f, 0xa4, 0xb4,
	0xe0, 0xdc, 0x95, 0xb7, 0xca, 0x4c, 0x8b, 0x5e, 0xa4, 0x8f, 0xc9, 0xa1, 0x06, 0xe7, 0xc4, 0x14,
	0x26, 0x0e, 0x8c, 0x67, 0x37, 0x4e, 0x93, 0xf3, 0x51, 0x71, 0xd0, 0xb1, 0x2b, 0x30, 0x9e, 0x3e,
	0x25, 0xf7, 0x7a, 0xc5, 0x42, 0x05, 0xaa, 0x01, 0xc9, 0x6e, 0x06, 0xed, 0x6e, 0xc7, 0x8b, 0x0e,
	0xd3, 0x47, 0xe4, 0x40, 0xc2, 0x27, 0xb1, 0x98, 0xfb, 0x89, 0x72, 0x9a, 0xdd, 0x0a, 0x4f, 0x23,
	0x1d, 0x7a, 0xe7, 0x74, 0xfb, 0xbb, 0x5e, 0x98, 0x21, 0x5e, 0xb3, 0xdb, 0xc1, 0xe8, 0x87, 0xde,
	0x22, 0x5e, 0xd3, 0x27, 0x64, 0x64, 0xe1, 0xf3, 0x42, 0x59, 0x90, 0xd1, 0xd9, 0x0f, 0xce, 0x61,
	0x0f, 0x5b, 0xe9, 0xec, 0x35, 0x19, 0x7e, 0x10, 0x56, 0x68, 0x47, 0x1f, 0x90, 0xa1, 0x44, 0x2d,
	0x94, 0x09, 0x87, 0x18, 0x15, 0x5d, 0xf5, 0xea, 0xe4, 0xeb, 0xdf, 0xef, 0xcf, 0xd8, 0xff, 0x34,
	0x74, 0x3c, 0x1a, 0x8f, 0x63, 0x97, 0xc5, 0xcf, 0x4d, 0x96, 0xac, 0x37, 0x59, 0xf2, 0x67, 0x93,
	0x25, 0xdf, 0xb6, 0xd9, 0x60, 0xbd, 0xcd, 0x06, 0xbf, 0xb7, 0xd9, 0xe0, 0xe3, 0xcb, 0xa9, 0xf2,
	0xb3, 0x45, 0x99, 0x57, 0xa8, 0x79, 0x59, 0xd5, 0x63, 0x65, 0x0c, 0x36, 0xc2, 0x2b, 0x34, 0x8e,
	0xef, 0xd6, 0x8d, 0xe3, 0x55, 0xf9, 0x32, 0xa6, 0x1c, 0x22, 0x2e, 0x87, 0x21, 0xa2, 0x17, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xac, 0x40, 0x7c, 0x7a, 0x04, 0x02, 0x00, 0x00,
}

func (m *Mailbox) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Mailbox) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Mailbox) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RequiredHook) > 0 {
		i -= len(m.RequiredHook)
		copy(dAtA[i:], m.RequiredHook)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.RequiredHook)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.DefaultHook) > 0 {
		i -= len(m.DefaultHook)
		copy(dAtA[i:], m.DefaultHook)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.DefaultHook)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DefaultIsm) > 0 {
		i -= len(m.DefaultIsm)
		copy(dAtA[i:], m.DefaultIsm)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.DefaultIsm)))
		i--
		dAtA[i] = 0x2a
	}
	if m.MessageReceived != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.MessageReceived))
		i--
		dAtA[i] = 0x20
	}
	if m.MessageSent != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.MessageSent))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Params) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Params) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Params) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Domain != 0 {
		i = encodeVarintTypes(dAtA, i, uint64(m.Domain))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Mailbox) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.MessageSent != 0 {
		n += 1 + sovTypes(uint64(m.MessageSent))
	}
	if m.MessageReceived != 0 {
		n += 1 + sovTypes(uint64(m.MessageReceived))
	}
	l = len(m.DefaultIsm)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.DefaultHook)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.RequiredHook)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	return n
}

func (m *Params) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Domain != 0 {
		n += 1 + sovTypes(uint64(m.Domain))
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Mailbox) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Mailbox: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Mailbox: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageSent", wireType)
			}
			m.MessageSent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageSent |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageReceived", wireType)
			}
			m.MessageReceived = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MessageReceived |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultIsm", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultIsm = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DefaultHook", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DefaultHook = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequiredHook", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequiredHook = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Params) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Params: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Params: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Domain", wireType)
			}
			m.Domain = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Domain |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
