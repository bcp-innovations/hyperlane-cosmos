// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: hyperlane/warp/v1/tx.proto

package types

import (
	context "context"
	cosmossdk_io_math "cosmossdk.io/math"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateCollateralToken struct {
	// sender is the message sender.
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	OriginMailbox    string `protobuf:"bytes,2,opt,name=origin_mailbox,json=originMailbox,proto3" json:"origin_mailbox,omitempty"`
	OriginDenom      string `protobuf:"bytes,3,opt,name=origin_denom,json=originDenom,proto3" json:"origin_denom,omitempty"`
	ReceiverDomain   uint32 `protobuf:"varint,4,opt,name=receiver_domain,json=receiverDomain,proto3" json:"receiver_domain,omitempty"`
	ReceiverContract string `protobuf:"bytes,5,opt,name=receiver_contract,json=receiverContract,proto3" json:"receiver_contract,omitempty"`
	IsmId            string `protobuf:"bytes,6,opt,name=ism_id,json=ismId,proto3" json:"ism_id,omitempty"`
}

func (m *MsgCreateCollateralToken) Reset()         { *m = MsgCreateCollateralToken{} }
func (m *MsgCreateCollateralToken) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCollateralToken) ProtoMessage()    {}
func (*MsgCreateCollateralToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1a3f4c9d53a091, []int{0}
}
func (m *MsgCreateCollateralToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCollateralToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCollateralToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCollateralToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCollateralToken.Merge(m, src)
}
func (m *MsgCreateCollateralToken) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCollateralToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCollateralToken.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCollateralToken proto.InternalMessageInfo

func (m *MsgCreateCollateralToken) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateCollateralToken) GetOriginMailbox() string {
	if m != nil {
		return m.OriginMailbox
	}
	return ""
}

func (m *MsgCreateCollateralToken) GetOriginDenom() string {
	if m != nil {
		return m.OriginDenom
	}
	return ""
}

func (m *MsgCreateCollateralToken) GetReceiverDomain() uint32 {
	if m != nil {
		return m.ReceiverDomain
	}
	return 0
}

func (m *MsgCreateCollateralToken) GetReceiverContract() string {
	if m != nil {
		return m.ReceiverContract
	}
	return ""
}

func (m *MsgCreateCollateralToken) GetIsmId() string {
	if m != nil {
		return m.IsmId
	}
	return ""
}

type MsgCreateCollateralTokenResponse struct {
}

func (m *MsgCreateCollateralTokenResponse) Reset()         { *m = MsgCreateCollateralTokenResponse{} }
func (m *MsgCreateCollateralTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCollateralTokenResponse) ProtoMessage()    {}
func (*MsgCreateCollateralTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1a3f4c9d53a091, []int{1}
}
func (m *MsgCreateCollateralTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCollateralTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCollateralTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCollateralTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCollateralTokenResponse.Merge(m, src)
}
func (m *MsgCreateCollateralTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCollateralTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCollateralTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCollateralTokenResponse proto.InternalMessageInfo

type MsgCreateSyntheticToken struct {
	// sender is the message sender.
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	OriginMailbox    string `protobuf:"bytes,2,opt,name=origin_mailbox,json=originMailbox,proto3" json:"origin_mailbox,omitempty"`
	ReceiverDomain   uint32 `protobuf:"varint,3,opt,name=receiver_domain,json=receiverDomain,proto3" json:"receiver_domain,omitempty"`
	ReceiverContract string `protobuf:"bytes,4,opt,name=receiver_contract,json=receiverContract,proto3" json:"receiver_contract,omitempty"`
	IsmId            string `protobuf:"bytes,5,opt,name=ism_id,json=ismId,proto3" json:"ism_id,omitempty"`
}

func (m *MsgCreateSyntheticToken) Reset()         { *m = MsgCreateSyntheticToken{} }
func (m *MsgCreateSyntheticToken) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSyntheticToken) ProtoMessage()    {}
func (*MsgCreateSyntheticToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1a3f4c9d53a091, []int{2}
}
func (m *MsgCreateSyntheticToken) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSyntheticToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSyntheticToken.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSyntheticToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSyntheticToken.Merge(m, src)
}
func (m *MsgCreateSyntheticToken) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSyntheticToken) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSyntheticToken.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSyntheticToken proto.InternalMessageInfo

func (m *MsgCreateSyntheticToken) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateSyntheticToken) GetOriginMailbox() string {
	if m != nil {
		return m.OriginMailbox
	}
	return ""
}

func (m *MsgCreateSyntheticToken) GetReceiverDomain() uint32 {
	if m != nil {
		return m.ReceiverDomain
	}
	return 0
}

func (m *MsgCreateSyntheticToken) GetReceiverContract() string {
	if m != nil {
		return m.ReceiverContract
	}
	return ""
}

func (m *MsgCreateSyntheticToken) GetIsmId() string {
	if m != nil {
		return m.IsmId
	}
	return ""
}

type MsgCreateSyntheticTokenResponse struct {
}

func (m *MsgCreateSyntheticTokenResponse) Reset()         { *m = MsgCreateSyntheticTokenResponse{} }
func (m *MsgCreateSyntheticTokenResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSyntheticTokenResponse) ProtoMessage()    {}
func (*MsgCreateSyntheticTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1a3f4c9d53a091, []int{3}
}
func (m *MsgCreateSyntheticTokenResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSyntheticTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSyntheticTokenResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSyntheticTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSyntheticTokenResponse.Merge(m, src)
}
func (m *MsgCreateSyntheticTokenResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSyntheticTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSyntheticTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSyntheticTokenResponse proto.InternalMessageInfo

type MsgRemoteTransfer struct {
	Sender    string                `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	TokenId   string                `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Recipient string                `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount    cosmossdk_io_math.Int `protobuf:"bytes,4,opt,name=amount,proto3,customtype=cosmossdk.io/math.Int" json:"amount"`
	// IGP
	IgpId    string `protobuf:"bytes,5,opt,name=igp_id,json=igpId,proto3" json:"igp_id,omitempty"`
	GasLimit uint64 `protobuf:"varint,6,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	MaxFee   uint64 `protobuf:"varint,7,opt,name=max_fee,json=maxFee,proto3" json:"max_fee,omitempty"`
}

func (m *MsgRemoteTransfer) Reset()         { *m = MsgRemoteTransfer{} }
func (m *MsgRemoteTransfer) String() string { return proto.CompactTextString(m) }
func (*MsgRemoteTransfer) ProtoMessage()    {}
func (*MsgRemoteTransfer) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1a3f4c9d53a091, []int{4}
}
func (m *MsgRemoteTransfer) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoteTransfer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoteTransfer.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoteTransfer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoteTransfer.Merge(m, src)
}
func (m *MsgRemoteTransfer) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoteTransfer) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoteTransfer.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoteTransfer proto.InternalMessageInfo

func (m *MsgRemoteTransfer) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *MsgRemoteTransfer) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *MsgRemoteTransfer) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgRemoteTransfer) GetIgpId() string {
	if m != nil {
		return m.IgpId
	}
	return ""
}

func (m *MsgRemoteTransfer) GetGasLimit() uint64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *MsgRemoteTransfer) GetMaxFee() uint64 {
	if m != nil {
		return m.MaxFee
	}
	return 0
}

type MsgRemoteTransferResponse struct {
	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
}

func (m *MsgRemoteTransferResponse) Reset()         { *m = MsgRemoteTransferResponse{} }
func (m *MsgRemoteTransferResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoteTransferResponse) ProtoMessage()    {}
func (*MsgRemoteTransferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d1a3f4c9d53a091, []int{5}
}
func (m *MsgRemoteTransferResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoteTransferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoteTransferResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoteTransferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoteTransferResponse.Merge(m, src)
}
func (m *MsgRemoteTransferResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoteTransferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoteTransferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoteTransferResponse proto.InternalMessageInfo

func (m *MsgRemoteTransferResponse) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgCreateCollateralToken)(nil), "hyperlane.warp.v1.MsgCreateCollateralToken")
	proto.RegisterType((*MsgCreateCollateralTokenResponse)(nil), "hyperlane.warp.v1.MsgCreateCollateralTokenResponse")
	proto.RegisterType((*MsgCreateSyntheticToken)(nil), "hyperlane.warp.v1.MsgCreateSyntheticToken")
	proto.RegisterType((*MsgCreateSyntheticTokenResponse)(nil), "hyperlane.warp.v1.MsgCreateSyntheticTokenResponse")
	proto.RegisterType((*MsgRemoteTransfer)(nil), "hyperlane.warp.v1.MsgRemoteTransfer")
	proto.RegisterType((*MsgRemoteTransferResponse)(nil), "hyperlane.warp.v1.MsgRemoteTransferResponse")
}

func init() { proto.RegisterFile("hyperlane/warp/v1/tx.proto", fileDescriptor_9d1a3f4c9d53a091) }

var fileDescriptor_9d1a3f4c9d53a091 = []byte{
	// 720 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0xbf, 0x4f, 0x1b, 0x3d,
	0x18, 0xc7, 0x73, 0x81, 0x24, 0xe0, 0xf7, 0x85, 0xf7, 0x8d, 0x05, 0xe2, 0x48, 0x4b, 0x08, 0x51,
	0x5b, 0x50, 0x68, 0xee, 0xf8, 0x31, 0x14, 0xb1, 0x15, 0x50, 0xd5, 0x48, 0xcd, 0x72, 0x30, 0x75,
	0x89, 0x9c, 0x3b, 0xe3, 0x58, 0xc4, 0xf6, 0xc9, 0x36, 0x69, 0xb2, 0x55, 0x1d, 0x3b, 0x75, 0xee,
	0x5f, 0xd0, 0x91, 0x81, 0xbd, 0x63, 0x19, 0x11, 0x53, 0xd5, 0x01, 0x55, 0xa0, 0x8a, 0x7f, 0xa3,
	0xba, 0x1f, 0x49, 0x09, 0x24, 0x85, 0x0e, 0x5d, 0xa2, 0xf8, 0xfb, 0xfd, 0xfa, 0x79, 0x7c, 0x1f,
	0x3d, 0xe7, 0x03, 0xb9, 0x46, 0xc7, 0xc7, 0xb2, 0x89, 0x38, 0xb6, 0xdf, 0x20, 0xe9, 0xdb, 0xad,
	0x55, 0x5b, 0xb7, 0x2d, 0x5f, 0x0a, 0x2d, 0x60, 0xb6, 0xe7, 0x59, 0x81, 0x67, 0xb5, 0x56, 0x73,
	0x33, 0xae, 0x50, 0x4c, 0x28, 0x9b, 0x29, 0x12, 0x44, 0x99, 0x22, 0x51, 0x36, 0x37, 0x45, 0x04,
	0x11, 0xe1, 0x5f, 0x3b, 0xf8, 0x17, 0xab, 0x59, 0xc4, 0x28, 0x17, 0x76, 0xf8, 0x1b, 0x4b, 0x73,
	0x03, 0x1a, 0x76, 0x7c, 0xac, 0x62, 0x7b, 0x36, 0x6a, 0x50, 0x8b, 0x4a, 0x45, 0x8b, 0xc8, 0x2a,
	0x7e, 0x4e, 0x02, 0xb3, 0xaa, 0xc8, 0xb6, 0xc4, 0x48, 0xe3, 0x6d, 0xd1, 0x6c, 0x22, 0x8d, 0x25,
	0x6a, 0xee, 0x89, 0x03, 0xcc, 0xe1, 0x1a, 0xc8, 0xb8, 0x81, 0x21, 0xa4, 0x69, 0x14, 0x8c, 0xa5,
	0xf1, 0x2d, 0xf3, 0xec, 0xb8, 0x3c, 0x15, 0xef, 0x7f, 0xee, 0x79, 0x12, 0x2b, 0xb5, 0xab, 0x25,
	0xe5, 0xc4, 0xe9, 0x06, 0xe1, 0x63, 0x30, 0x29, 0x24, 0x25, 0x94, 0xd7, 0x18, 0xa2, 0xcd, 0xba,
	0x68, 0x9b, 0xc9, 0x60, 0xab, 0x33, 0x11, 0xa9, 0xd5, 0x48, 0x84, 0x0b, 0xe0, 0xdf, 0x38, 0xe6,
	0x61, 0x2e, 0x98, 0x39, 0x12, 0x86, 0xfe, 0x89, 0xb4, 0x9d, 0x40, 0x82, 0x8b, 0xe0, 0x3f, 0x89,
	0x5d, 0x4c, 0x5b, 0x58, 0xd6, 0x3c, 0xc1, 0x10, 0xe5, 0xe6, 0x68, 0xc1, 0x58, 0x9a, 0x70, 0x26,
	0xbb, 0xf2, 0x4e, 0xa8, 0xc2, 0x65, 0x90, 0xed, 0x05, 0x5d, 0xc1, 0xb5, 0x44, 0xae, 0x36, 0x53,
	0x61, 0xc1, 0xff, 0xbb, 0xc6, 0x76, 0xac, 0xc3, 0x69, 0x90, 0xa6, 0x8a, 0xd5, 0xa8, 0x67, 0xa6,
	0xc3, 0x44, 0x8a, 0x2a, 0x56, 0xf1, 0x36, 0x37, 0xde, 0x5d, 0x1d, 0x95, 0xba, 0x0f, 0xf1, 0xfe,
	0xea, 0xa8, 0xb4, 0x78, 0x03, 0xe9, 0x30, 0x48, 0xc5, 0x22, 0x28, 0x0c, 0xf3, 0x1c, 0xac, 0x7c,
	0xc1, 0x15, 0x2e, 0x7e, 0x4c, 0x82, 0x99, 0x5e, 0x68, 0xb7, 0xc3, 0x75, 0x03, 0x6b, 0xea, 0xfe,
	0x75, 0xc8, 0x03, 0x08, 0x8e, 0xdc, 0x9f, 0xe0, 0xe8, 0x9d, 0x04, 0x53, 0xd7, 0x09, 0x3e, 0xbb,
	0x49, 0xf0, 0xc9, 0x30, 0x82, 0xfd, 0x00, 0x8a, 0x0b, 0x60, 0x7e, 0x88, 0xd5, 0xe3, 0xf7, 0x25,
	0x09, 0xb2, 0x55, 0x45, 0x1c, 0xcc, 0x84, 0xc6, 0x7b, 0x12, 0x71, 0xb5, 0x8f, 0x25, 0x5c, 0x01,
	0x69, 0x85, 0xb9, 0x87, 0xef, 0x06, 0x17, 0xe7, 0xe0, 0x2c, 0x18, 0xd3, 0x41, 0xe1, 0xe0, 0xf0,
	0x11, 0xb1, 0x4c, 0xb8, 0xae, 0x78, 0xf0, 0x21, 0x18, 0x97, 0xd8, 0xa5, 0x3e, 0xc5, 0x5c, 0xc7,
	0xd3, 0xf8, 0x4b, 0x80, 0x2f, 0x41, 0x1a, 0x31, 0x71, 0xc8, 0x63, 0x2a, 0x5b, 0x2b, 0x27, 0xe7,
	0xf3, 0x89, 0x6f, 0xe7, 0xf3, 0xd3, 0x51, 0x3b, 0xe5, 0x1d, 0x58, 0x54, 0xd8, 0x0c, 0xe9, 0x86,
	0x55, 0xe1, 0xfa, 0xec, 0xb8, 0x0c, 0xe2, 0x73, 0x54, 0xb8, 0xfe, 0x74, 0x75, 0x54, 0x32, 0x9c,
	0x78, 0x7f, 0x48, 0x8f, 0xf8, 0xd7, 0xe9, 0x11, 0xbf, 0xe2, 0xc1, 0x07, 0x60, 0x9c, 0x20, 0x55,
	0x6b, 0x52, 0x46, 0x75, 0x38, 0x99, 0xa3, 0xce, 0x18, 0x41, 0xea, 0x55, 0xb0, 0x86, 0x33, 0x20,
	0xc3, 0x50, 0xbb, 0xb6, 0x8f, 0xb1, 0x99, 0x09, 0xad, 0x34, 0x43, 0xed, 0x17, 0x18, 0x6f, 0xae,
	0x04, 0xcc, 0xe3, 0x87, 0x0b, 0x90, 0x17, 0x6e, 0x23, 0xef, 0x67, 0x56, 0xdc, 0x04, 0xb3, 0xb7,
	0xc4, 0x2e, 0x66, 0x38, 0x07, 0x00, 0xc3, 0x4a, 0x21, 0x82, 0x83, 0xf3, 0x19, 0x11, 0x84, 0x58,
	0xa9, 0x78, 0x6b, 0x3f, 0x92, 0x60, 0xa4, 0xaa, 0x08, 0xec, 0x80, 0xe9, 0xc1, 0xf7, 0xc5, 0xb2,
	0x75, 0xeb, 0x72, 0xb3, 0x86, 0xbd, 0x1b, 0xb9, 0xf5, 0x3f, 0x08, 0xf7, 0x4e, 0xd8, 0x02, 0x53,
	0x03, 0x5f, 0xa2, 0xd2, 0xef, 0x8a, 0xf5, 0x67, 0x73, 0x6b, 0xf7, 0xcf, 0xf6, 0xfa, 0x7a, 0x60,
	0xf2, 0xc6, 0xf0, 0x3d, 0x1a, 0x5c, 0xa5, 0x3f, 0x95, 0x7b, 0x7a, 0x9f, 0x54, 0xb7, 0x4b, 0x2e,
	0xf5, 0x36, 0x18, 0x95, 0x2d, 0xe7, 0xe4, 0x22, 0x6f, 0x9c, 0x5e, 0xe4, 0x8d, 0xef, 0x17, 0x79,
	0xe3, 0xc3, 0x65, 0x3e, 0x71, 0x7a, 0x99, 0x4f, 0x7c, 0xbd, 0xcc, 0x27, 0x5e, 0x6f, 0x10, 0xaa,
	0x1b, 0x87, 0x75, 0xcb, 0x15, 0xcc, 0xae, 0xbb, 0x7e, 0x99, 0x72, 0x2e, 0x5a, 0x48, 0x53, 0xc1,
	0x95, 0xdd, 0x6b, 0x54, 0x8e, 0x3f, 0x27, 0xed, 0x68, 0x06, 0xc2, 0x0f, 0x41, 0x3d, 0x1d, 0x5e,
	0xf7, 0xeb, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x21, 0x24, 0xd8, 0xc7, 0x9b, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateCollateralToken(ctx context.Context, in *MsgCreateCollateralToken, opts ...grpc.CallOption) (*MsgCreateCollateralTokenResponse, error)
	CreateSyntheticToken(ctx context.Context, in *MsgCreateSyntheticToken, opts ...grpc.CallOption) (*MsgCreateSyntheticTokenResponse, error)
	RemoteTransfer(ctx context.Context, in *MsgRemoteTransfer, opts ...grpc.CallOption) (*MsgRemoteTransferResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateCollateralToken(ctx context.Context, in *MsgCreateCollateralToken, opts ...grpc.CallOption) (*MsgCreateCollateralTokenResponse, error) {
	out := new(MsgCreateCollateralTokenResponse)
	err := c.cc.Invoke(ctx, "/hyperlane.warp.v1.Msg/CreateCollateralToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateSyntheticToken(ctx context.Context, in *MsgCreateSyntheticToken, opts ...grpc.CallOption) (*MsgCreateSyntheticTokenResponse, error) {
	out := new(MsgCreateSyntheticTokenResponse)
	err := c.cc.Invoke(ctx, "/hyperlane.warp.v1.Msg/CreateSyntheticToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoteTransfer(ctx context.Context, in *MsgRemoteTransfer, opts ...grpc.CallOption) (*MsgRemoteTransferResponse, error) {
	out := new(MsgRemoteTransferResponse)
	err := c.cc.Invoke(ctx, "/hyperlane.warp.v1.Msg/RemoteTransfer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateCollateralToken(context.Context, *MsgCreateCollateralToken) (*MsgCreateCollateralTokenResponse, error)
	CreateSyntheticToken(context.Context, *MsgCreateSyntheticToken) (*MsgCreateSyntheticTokenResponse, error)
	RemoteTransfer(context.Context, *MsgRemoteTransfer) (*MsgRemoteTransferResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateCollateralToken(ctx context.Context, req *MsgCreateCollateralToken) (*MsgCreateCollateralTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCollateralToken not implemented")
}
func (*UnimplementedMsgServer) CreateSyntheticToken(ctx context.Context, req *MsgCreateSyntheticToken) (*MsgCreateSyntheticTokenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSyntheticToken not implemented")
}
func (*UnimplementedMsgServer) RemoteTransfer(ctx context.Context, req *MsgRemoteTransfer) (*MsgRemoteTransferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoteTransfer not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateCollateralToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCollateralToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCollateralToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hyperlane.warp.v1.Msg/CreateCollateralToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCollateralToken(ctx, req.(*MsgCreateCollateralToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateSyntheticToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSyntheticToken)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSyntheticToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hyperlane.warp.v1.Msg/CreateSyntheticToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSyntheticToken(ctx, req.(*MsgCreateSyntheticToken))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoteTransfer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoteTransfer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoteTransfer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/hyperlane.warp.v1.Msg/RemoteTransfer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoteTransfer(ctx, req.(*MsgRemoteTransfer))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "hyperlane.warp.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCollateralToken",
			Handler:    _Msg_CreateCollateralToken_Handler,
		},
		{
			MethodName: "CreateSyntheticToken",
			Handler:    _Msg_CreateSyntheticToken_Handler,
		},
		{
			MethodName: "RemoteTransfer",
			Handler:    _Msg_RemoteTransfer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hyperlane/warp/v1/tx.proto",
}

func (m *MsgCreateCollateralToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCollateralToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCollateralToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.IsmId) > 0 {
		i -= len(m.IsmId)
		copy(dAtA[i:], m.IsmId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.IsmId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ReceiverContract) > 0 {
		i -= len(m.ReceiverContract)
		copy(dAtA[i:], m.ReceiverContract)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReceiverContract)))
		i--
		dAtA[i] = 0x2a
	}
	if m.ReceiverDomain != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ReceiverDomain))
		i--
		dAtA[i] = 0x20
	}
	if len(m.OriginDenom) > 0 {
		i -= len(m.OriginDenom)
		copy(dAtA[i:], m.OriginDenom)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OriginDenom)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.OriginMailbox) > 0 {
		i -= len(m.OriginMailbox)
		copy(dAtA[i:], m.OriginMailbox)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OriginMailbox)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCollateralTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCollateralTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCollateralTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateSyntheticToken) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSyntheticToken) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSyntheticToken) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.IsmId) > 0 {
		i -= len(m.IsmId)
		copy(dAtA[i:], m.IsmId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.IsmId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ReceiverContract) > 0 {
		i -= len(m.ReceiverContract)
		copy(dAtA[i:], m.ReceiverContract)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ReceiverContract)))
		i--
		dAtA[i] = 0x22
	}
	if m.ReceiverDomain != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ReceiverDomain))
		i--
		dAtA[i] = 0x18
	}
	if len(m.OriginMailbox) > 0 {
		i -= len(m.OriginMailbox)
		copy(dAtA[i:], m.OriginMailbox)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OriginMailbox)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSyntheticTokenResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSyntheticTokenResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSyntheticTokenResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoteTransfer) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoteTransfer) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoteTransfer) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.MaxFee != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.MaxFee))
		i--
		dAtA[i] = 0x38
	}
	if m.GasLimit != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.GasLimit))
		i--
		dAtA[i] = 0x30
	}
	if len(m.IgpId) > 0 {
		i -= len(m.IgpId)
		copy(dAtA[i:], m.IgpId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.IgpId)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size := m.Amount.Size()
		i -= size
		if _, err := m.Amount.MarshalTo(dAtA[i:]); err != nil {
			return 0, err
		}
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.TokenId) > 0 {
		i -= len(m.TokenId)
		copy(dAtA[i:], m.TokenId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TokenId)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoteTransferResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoteTransferResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoteTransferResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.MessageId) > 0 {
		i -= len(m.MessageId)
		copy(dAtA[i:], m.MessageId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MessageId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateCollateralToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OriginMailbox)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OriginDenom)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ReceiverDomain != 0 {
		n += 1 + sovTx(uint64(m.ReceiverDomain))
	}
	l = len(m.ReceiverContract)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.IsmId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateCollateralTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateSyntheticToken) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OriginMailbox)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ReceiverDomain != 0 {
		n += 1 + sovTx(uint64(m.ReceiverDomain))
	}
	l = len(m.ReceiverContract)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.IsmId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateSyntheticTokenResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoteTransfer) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.TokenId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.IgpId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.GasLimit != 0 {
		n += 1 + sovTx(uint64(m.GasLimit))
	}
	if m.MaxFee != 0 {
		n += 1 + sovTx(uint64(m.MaxFee))
	}
	return n
}

func (m *MsgRemoteTransferResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.MessageId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateCollateralToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCollateralToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCollateralToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginMailbox", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginMailbox = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginDenom", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginDenom = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverDomain", wireType)
			}
			m.ReceiverDomain = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverDomain |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverContract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReceiverContract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsmId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsmId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCollateralTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCollateralTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCollateralTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSyntheticToken) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSyntheticToken: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSyntheticToken: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OriginMailbox", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OriginMailbox = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverDomain", wireType)
			}
			m.ReceiverDomain = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ReceiverDomain |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ReceiverContract", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ReceiverContract = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsmId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IsmId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSyntheticTokenResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSyntheticTokenResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSyntheticTokenResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoteTransfer) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoteTransfer: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoteTransfer: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IgpId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IgpId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field GasLimit", wireType)
			}
			m.GasLimit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.GasLimit |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxFee", wireType)
			}
			m.MaxFee = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxFee |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoteTransferResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoteTransferResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoteTransferResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MessageId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MessageId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
